[{"D:\\Mook\\my-app\\src\\index.js":"1","D:\\Mook\\my-app\\src\\reportWebVitals.js":"2","D:\\Mook\\my-app\\src\\App.js":"3","D:\\Mook\\my-app\\src\\components\\Question1\\Question1.jsx":"4","D:\\Mook\\my-app\\src\\components\\Question2\\Question2.jsx":"5","D:\\Mook\\my-app\\src\\components\\Question2\\ToDo.jsx":"6","D:\\Mook\\my-app\\src\\components\\Question3\\Question3.jsx":"7","D:\\Mook\\my-app\\src\\components\\Question4\\Question4.jsx":"8","D:\\Mook\\my-app\\src\\components\\Question4\\Card.jsx":"9","D:\\Mook\\my-app\\src\\components\\Question4\\Button.jsx":"10","D:\\Mook\\my-app\\src\\components\\Question4\\Box.jsx":"11","D:\\Mook\\my-app\\src\\components\\Question5\\Question5.jsx":"12","D:\\Mook\\my-app\\src\\components\\Question6\\Question6.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":583,"mtime":1612278866206,"results":"17","hashOfConfig":"15"},{"size":1080,"mtime":1612188038742,"results":"18","hashOfConfig":"15"},{"size":2054,"mtime":1612193928378,"results":"19","hashOfConfig":"15"},{"size":1419,"mtime":1612193961138,"results":"20","hashOfConfig":"15"},{"size":927,"mtime":1612196426211,"results":"21","hashOfConfig":"15"},{"size":521,"mtime":1612279387985,"results":"22","hashOfConfig":"15"},{"size":1106,"mtime":1612273375892,"results":"23","hashOfConfig":"15"},{"size":201,"mtime":1612199535286,"results":"24","hashOfConfig":"15"},{"size":368,"mtime":1612203683846,"results":"25","hashOfConfig":"15"},{"size":704,"mtime":1612282626036,"results":"26","hashOfConfig":"15"},{"size":1150,"mtime":1612282579882,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ru88zn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Mook\\my-app\\src\\index.js",[],["57","58"],"D:\\Mook\\my-app\\src\\reportWebVitals.js",[],"D:\\Mook\\my-app\\src\\App.js",[],"D:\\Mook\\my-app\\src\\components\\Question1\\Question1.jsx",[],"D:\\Mook\\my-app\\src\\components\\Question2\\Question2.jsx",[],"D:\\Mook\\my-app\\src\\components\\Question2\\ToDo.jsx",[],"D:\\Mook\\my-app\\src\\components\\Question3\\Question3.jsx",["59"],"import React, { useEffect } from \"react\";\r\n\r\nconst Question3 = () => {\r\n\r\n    const findUniq = (lists) => {\r\n        let countList = [];\r\n        lists.map(n => {\r\n            let index = countList.findIndex(list => list.num === n);\r\n            if (index === -1) {\r\n                countList.push({ num: n, count: 1 });\r\n            } else {\r\n                countList[index].count = countList[index].count + 1;\r\n            }\r\n        })\r\n        const uniq = countList.find(list => list.count === 1);\r\n        console.log(uniq ? 'Q3 [' + lists.join(', ') + '] Uniq number is: ' + uniq.num : 'Q3 [' + lists.join(', ') + '] No uniq number');\r\n    }\r\n\r\n    useEffect(() => {\r\n        findUniq([1, 1, 1, 2, 1, 1]);\r\n        findUniq([0, 0, 0.55, 0, 0]);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Question 3</h2>\r\n            <p>See answer on console.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question3;","D:\\Mook\\my-app\\src\\components\\Question4\\Question4.jsx",["60"],"D:\\Mook\\my-app\\src\\components\\Question4\\Card.jsx",["61"],"D:\\Mook\\my-app\\src\\components\\Question4\\Button.jsx",[],"D:\\Mook\\my-app\\src\\components\\Question4\\Box.jsx",[],"D:\\Mook\\my-app\\src\\components\\Question5\\Question5.jsx",["62","63"],"import React, { useEffect } from \"react\";\r\n\r\nconst Question5 = () => {\r\n\r\n    String.prototype.toCamelCase = function () {\r\n        return this.replace(/[^a-z ]/ig, '')  // Replace everything but letters and spaces.\r\n            .replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, // Find non-words, uppercase letters, leading-word letters, and multiple spaces.\r\n                function (match) {\r\n                    return +match === 0 ? \"\" : match['toUpperCase']();\r\n                });\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h2>Question 5</h2>\r\n            <p>{\"hello case\".toCamelCase()}</p>\r\n            <p>{\"camel case word\".toCamelCase()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question5;","D:\\Mook\\my-app\\src\\components\\Question6\\Question6.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":7,"column":21,"nodeType":"70","messageId":"71","endLine":7,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":11,"column":17,"nodeType":"78","endLine":11,"endColumn":65},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":5,"column":5,"nodeType":"81","messageId":"82","endLine":11,"endColumn":6},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-global-assign","no-unsafe-negation"]